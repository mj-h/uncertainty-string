var UncertStr;(()=>{"use strict";var t={763:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.UncertaintyString=void 0,e.UncertaintyString=class{static toNumbers(t){const e=t.split("(");if(2!=e.length||!e[1].endsWith(")"))throw"Uncertainty-string does not contain proper parentheses: "+t;if(e[1]=e[1].slice(0,-1),e[1].indexOf(".")>=0)throw"The uncertainty-part of an uncertainty-string should not contain a period. Error in: "+t;let n=0;const r=e[0].indexOf(".");return r>=0&&(n=e[0].length-r-1),[parseFloat(e[0]),parseFloat(e[1])*Math.pow(10,-n)]}static fromNumbers(t,e){const[n,r]=function(t){const e=t.toExponential(),n=Number(e.split("e")[0]);let r=parseInt(e.split("e")[1]),i=n.toFixed(1);return"10.0"==i&&(r+=1,i="10"),[i.replace(".","").padEnd(r+1,"0"),r]}(e);let i=0,o="0",s=0;if(0!=t&&(i=Math.sign(t),o=function(t,e){const n=t.toExponential(),r=Number(n.split("e")[0]),i=parseInt(n.split("e")[1]);if(i-e>16)throw`Can only work with maximum of 16 digits, not ${i-e} digits.`;return r.toFixed(i-e).replace(".","")}(t/i,r-1),s=r-1+o.length-1),s<0)o="0.".padEnd(2-s-1,"0")+o;else if(0===t&&r-1<0)o="0.".padEnd(3-r,"0");else if(r-1>0&&0!==t)o=o.padEnd(o.length+r-1,"0");else if(r-1<0){const t=s+1;o=o.substring(0,t)+"."+o.substring(t)}return(i<0?"-":"")+o+"("+n+")"}}},607:function(t,e,n){var r=this&&this.__createBinding||(Object.create?function(t,e,n,r){void 0===r&&(r=n);var i=Object.getOwnPropertyDescriptor(e,n);i&&!("get"in i?!e.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,r,i)}:function(t,e,n,r){void 0===r&&(r=n),t[r]=e[n]}),i=this&&this.__exportStar||function(t,e){for(var n in t)"default"===n||Object.prototype.hasOwnProperty.call(e,n)||r(e,t,n)};Object.defineProperty(e,"__esModule",{value:!0}),i(n(763),e)}},e={},n=function n(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={exports:{}};return t[r].call(o.exports,o,o.exports,n),o.exports}(607);UncertStr=n})();